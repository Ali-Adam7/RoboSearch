{"version":3,"sources":["reportWebVitals.js","components/logo.svg","components/Logo.js","components/Card.js","components/cardList.js","components/Searchbar.js","components/Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logo","side","src","logo","className","Card","props","id","alt","style","color","margin","name","email","cardList","robots","map","robot","i","SearchBar","seatchfield","onChange","type","placeholder","Scroll","prop","overflowY","border","height","children","App","Searching","event","val","target","value","setState","search","state","robolist","fetch","response","json","users","filtered","this","filter","toLowerCase","includes","Row","textAlign","marginTop","Col","Component","ReactDOM","render","document","getElementById"],"mappings":"yKAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sCCPC,MAA0B,iC,OCS1BQ,EAPF,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAEf,OAEO,qBAAKC,IAAQC,EAAMC,UAAa,YAAmBH,KCO3CI,EAXF,SAACC,GACd,OACI,sBAAKF,UAAY,mDAAjB,UACI,qBAAKF,IAAG,+BAA4BI,EAAMC,IAAMC,IAAM,QACtD,oBAAIC,MAAS,CAACC,MAAO,OAAQC,OAAO,OAApC,SAA6CL,EAAMM,OACnD,mBAAGH,MAAS,CAACC,MAAO,SAApB,SAA+BJ,EAAMO,YCK9BC,EATE,SAAC,GAKd,OAL2B,EAAZC,OACIC,KAAI,SAACC,EAAOC,GAC3B,OAAS,cAAC,EAAD,CAAgBN,KAAQK,EAAML,KAAML,GAAMU,EAAMV,GAAIM,MAASI,EAAMJ,OAAtDK,OCKfC,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,YACpB,OACI,qBAAKhB,UAAY,MAAjB,SACJ,uBAAOiB,SAAYD,EAAaE,KAAO,SAASlB,UAAY,mCAAmCmB,YAAc,oBCG9FC,EAPA,SAACC,GAChB,OACA,qBAAKhB,MAAS,CAACiB,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAAtE,SACKH,EAAKI,Y,wBCmDKC,E,kDA1Cb,aAAc,IAAD,8BACX,gBAMFC,UAAY,SAACC,GACX,IAAIC,EAAMD,EAAME,OAAOC,MAEvB,EAAKC,SAAS,CACZC,OAASJ,KATX,EAAKK,MAAQ,CACXC,SAAW,GACXF,OAAS,IAJA,E,qDAiBf,WAAoB,IAAD,OACjBG,MAAM,8CAA8C9C,MAAK,SAAA+C,GAAQ,OAAIA,EAASC,UAAQhD,MAAK,SAAAiD,GAAK,OAAI,EAAKP,SAAU,CAACG,SAASI,S,oBAG7H,WAAU,IAAD,OACDC,EAAWC,KAAKP,MAAMC,SAASO,QAAO,SAAC7B,GAC3C,OAAOA,EAAML,KAAKmC,cAAcC,SAAS,EAAKV,MAAMD,OAAOU,kBAE/D,OACE,sBAAK3C,UAAY,KAAjB,UACG,eAAC6C,EAAA,EAAD,CAAKxC,MAAO,CAACyC,UAAU,SAAUC,UAAU,QAA3C,UACH,eAACC,EAAA,EAAD,CAAKhD,UAAY,KAAjB,UAAsB,cAAC,EAAD,CAAMH,KAAO,SAAnC,OACA,cAACmD,EAAA,EAAD,CAAMhD,UAAY,KAAlB,SAAuB,oBAAIK,MAAS,CAACC,MAAM,WAApB,6BACvB,eAAC0C,EAAA,EAAD,CAAKhD,UAAY,KAAjB,UAAsB,cAAC,EAAD,CAAMH,KAAO,UAAnC,UAIF,cAAC,EAAD,CAAWmB,YAAeyB,KAAKd,YAC/B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUhB,OAAU6B,a,GArCLS,aCHnBC,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,SAM1BlE,M","file":"static/js/main.e07057af.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport logo from './logo.svg'\nconst Logo = ({side}) => {\n \nreturn (\n    \n       <img src =  {logo} className = {\"App-logo\" + \" \" + side} ></img>\n)\n}\nexport default Logo","import React from 'react'\n\nconst Card = (props) => {\nreturn (\n    <div className = \"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n        <img src = {`https://robohash.org/${props.id}`} alt = \"img\"/>\n        <h3 style = {{color :\"grey\", margin:\"2px\"}}>{props.name}</h3>\n        <p style = {{color :\"black\"}}>{props.email}</p>\n\n    </div>\n)\n}\n\nexport default Card;\n","import React from \"react\"\nimport Card from './Card.js'\n\nconst cardList = ({robots}) => {\n    let cards = robots.map((robot, i) => {\n        return ( <Card key = {i }name = {robot.name} id = {robot.id} email = {robot.email}/>)\n\n    })\n    return (\n        cards\n    )\n}\nexport default cardList;","import React from 'react'\n\nconst SearchBar = ({seatchfield})  => {\nreturn (\n    <div className = \"pa2\"> \n<input onChange = {seatchfield} type = \"search\" className = \"pa3 ba b--green bg-lightest-blue\" placeholder = \"Search Names\"></input>\n\n    </div>\n)\n}\nexport default SearchBar","import React from 'react'\nconst Scroll = (prop) => {\nreturn(\n<div style = {{overflowY: 'scroll', border:'5px solid black', height: \"800px\"}}>\n    {prop.children}\n</div>\n)\n}\nexport default Scroll","import Logo from './components/Logo.js';\nimport CardList from \"./components/cardList\"\nimport SearchBar from './components/Searchbar.js'\nimport {Component} from 'react'\nimport Scroll from './components/Scroll'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Row } from 'react-bootstrap';\n\nimport { Col } from 'react-bootstrap';\n\n\nclass App extends  Component{\n  constructor(){\n    super()\n    this.state = {\n      robolist : [],\n      search : ''\n    }\n  }\n  Searching = (event) => {\n    let val = event.target.value;\n\n    this.setState({\n      search : val,\n    }\n    )  \n    \n    \n}\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(({robolist:users})))\n}\n\n  render() {\n    const filtered = this.state.robolist.filter((robot) => {\n      return(robot.name.toLowerCase().includes(this.state.search.toLowerCase()))\n    })\n  return (\n    <div className = \"tc\">\n       <Row style={{textAlign:\"center\", marginTop:\"20px\"}}>\n    <Col className = \"tl\"><Logo side = \"left\"/> </Col>\n    <Col  className = \"tc\"><h2 style = {{color:'#61DBFB'}}>Search Robots</h2></Col>\n    <Col className = \"tr\"><Logo side = \"right\"/> </Col>\n    \n  </Row>\n\n  <SearchBar seatchfield = {this.Searching}/>\n  <Scroll>   \n    <CardList robots = {filtered}/>\n</Scroll>\n  </div>\n  );\n}}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css'\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\"\nimport App from './App'\n\n\nReactDOM.render(\n <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}